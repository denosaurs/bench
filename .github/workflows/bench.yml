name: bench
'on':
  schedule:
    - cron: 0 0 * * *
  push:
    paths:
      - '**.ts'
      - '**.js'
      - '**.yml'
jobs:
  bare_abc:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: abc
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_abc.json &&

          kill $!
        working-directory: abc
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="abc/results/"
          RESULT_PATH="abc/results/bare_abc.json"
          RESULT="$(cat abc/results/bare_abc.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_alosaur:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: alosaur
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_alosaur.json &&

          kill $!
        working-directory: alosaur
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="alosaur/results/"
          RESULT_PATH="alosaur/results/bare_alosaur.json"
          RESULT="$(cat alosaur/results/bare_alosaur.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_aqua:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: aqua
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_aqua.json &&

          kill $!
        working-directory: aqua
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="aqua/results/"
          RESULT_PATH="aqua/results/bare_aqua.json"
          RESULT="$(cat aqua/results/bare_aqua.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_deno:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: deno
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_deno.json &&

          kill $!
        working-directory: deno
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="deno/results/"
          RESULT_PATH="deno/results/bare_deno.json"
          RESULT="$(cat deno/results/bare_deno.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_deno_canary:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno canary
        uses: denoland/setup-deno@main
        with:
          deno-version: canary
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: deno_canary
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_deno_canary.json &&

          kill $!
        working-directory: deno
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="deno/results/"
          RESULT_PATH="deno/results/bare_deno_canary.json"
          RESULT="$(cat deno/results/bare_deno_canary.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_dinatra:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: dinatra
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_dinatra.json &&

          kill $!
        working-directory: dinatra
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="dinatra/results/"
          RESULT_PATH="dinatra/results/bare_dinatra.json"
          RESULT="$(cat dinatra/results/bare_dinatra.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_drash:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: drash
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_drash.json &&

          kill $!
        working-directory: drash
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="drash/results/"
          RESULT_PATH="drash/results/bare_drash.json"
          RESULT="$(cat drash/results/bare_drash.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_express:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: express
        run: >-
          npm i && node bare.js &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_express.json &&

          kill $!
        working-directory: express
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="express/results/"
          RESULT_PATH="express/results/bare_express.json"
          RESULT="$(cat express/results/bare_express.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_fastify:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: fastify
        run: >-
          npm i && node bare.js &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_fastify.json &&

          kill $!
        working-directory: fastify
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="fastify/results/"
          RESULT_PATH="fastify/results/bare_fastify.json"
          RESULT="$(cat fastify/results/bare_fastify.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_http:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: http
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_http.json &&

          kill $!
        working-directory: http
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="http/results/"
          RESULT_PATH="http/results/bare_http.json"
          RESULT="$(cat http/results/bare_http.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_little_native:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: little_native
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_little_native.json &&

          kill $!
        working-directory: little
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="little/results/"
          RESULT_PATH="little/results/bare_little_native.json"
          RESULT="$(cat little/results/bare_little_native.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_little_std:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: little_std
        run: >-
          deno run -A bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_little_std.json &&

          kill $!
        working-directory: little
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="little/results/"
          RESULT_PATH="little/results/bare_little_std.json"
          RESULT="$(cat little/results/bare_little_std.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_mandarinets:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: mandarinets
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_mandarinets.json &&

          kill $!
        working-directory: mandarinets
        continue-on-error: true
        env:
          MANDARINE_SERVER_SESSION_MIDDLEWARE: false
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="mandarinets/results/"
          RESULT_PATH="mandarinets/results/bare_mandarinets.json"
          RESULT="$(cat mandarinets/results/bare_mandarinets.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_node:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: node
        run: >-
          node bare.js &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_node.json &&

          kill $!
        working-directory: node
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="node/results/"
          RESULT_PATH="node/results/bare_node.json"
          RESULT="$(cat node/results/bare_node.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_oak:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: oak
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_oak.json &&

          kill $!
        working-directory: oak
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="oak/results/"
          RESULT_PATH="oak/results/bare_oak.json"
          RESULT="$(cat oak/results/bare_oak.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_opine:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: opine
        run: >-
          deno run -A bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_opine.json &&

          kill $!
        working-directory: opine
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="opine/results/"
          RESULT_PATH="opine/results/bare_opine.json"
          RESULT="$(cat opine/results/bare_opine.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_pogo:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: pogo
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_pogo.json &&

          kill $!
        working-directory: pogo
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="pogo/results/"
          RESULT_PATH="pogo/results/bare_pogo.json"
          RESULT="$(cat pogo/results/bare_pogo.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_reno:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: reno
        run: >-
          deno compile --allow-net -o bare.out bare.ts
          mkdir -p results

          ./bare.out &

          sleep 5 &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_reno.json &&

          kill $!
        working-directory: reno
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="reno/results/"
          RESULT_PATH="reno/results/bare_reno.json"
          RESULT="$(cat reno/results/bare_reno.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_servest:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: servest
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_servest.json &&

          kill $!
        working-directory: servest
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="servest/results/"
          RESULT_PATH="servest/results/bare_servest.json"
          RESULT="$(cat servest/results/bare_servest.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  bare_tinyhttp:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: tinyhttp
        run: >-
          deno run -A bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_tinyhttp.json &&

          kill $!
        working-directory: tinyhttp
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="tinyhttp/results/"
          RESULT_PATH="tinyhttp/results/bare_tinyhttp.json"
          RESULT="$(cat tinyhttp/results/bare_tinyhttp.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
   bare_fast:
    runs-on: ubuntu-latest
    outputs:
      result_dir: '${{ steps.result.outputs.result_dir }}'
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Pull changes from other benchmarks
        run: git pull
      - name: Setup nodejs 13
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Setup deno latest
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install -g autocannon
      - name: START
        run: echo "Starting Benchmarks"
      - name: fast
        run: >-
          deno run -A --unstable bare.ts &

          sleep 15 && 

          mkdir -p results &&

          autocannon -c 40 -d 10 -j http://localhost:8000 >
          results/bare_servest.json &&

          kill $!
        working-directory: servest
        continue-on-error: true
      - name: END
        run: echo "End Benchmarks"
      - name: Set result output
        id: result
        run: |
          RESULT_DIR="fast/results/"
          RESULT_PATH="fast/results/bare_servest.json"
          RESULT="$(cat fast/results/bare_servest.json)"
          echo "::set-output name=result_dir::$RESULT_DIR"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  _results:
    runs-on: ubuntu-latest
    needs:
      - bare_abc
      - bare_alosaur
      - bare_aqua
      - bare_deno
      - bare_deno_canary
      - bare_dinatra
      - bare_drash
      - bare_express
      - bare_fastify
      - bare_http
      - bare_little_native
      - bare_little_std
      - bare_mandarinets
      - bare_node
      - bare_oak
      - bare_opine
      - bare_pogo
      - bare_reno
      - bare_servest
      - bare_tinyhttp
      - bare_fast
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Save bare_abc results
        run: >
          mkdir -p ${{needs.bare_abc.outputs.result_dir}}

          echo '${{needs.bare_abc.outputs.result}}' | jq . | tee
          ${{needs.bare_abc.outputs.result_path}}
      - name: Save bare_alosaur results
        run: >
          mkdir -p ${{needs.bare_alosaur.outputs.result_dir}}

          echo '${{needs.bare_alosaur.outputs.result}}' | jq . | tee
          ${{needs.bare_alosaur.outputs.result_path}}
      - name: Save bare_aqua results
        run: >
          mkdir -p ${{needs.bare_aqua.outputs.result_dir}}

          echo '${{needs.bare_aqua.outputs.result}}' | jq . | tee
          ${{needs.bare_aqua.outputs.result_path}}
      - name: Save bare_deno results
        run: >
          mkdir -p ${{needs.bare_deno.outputs.result_dir}}

          echo '${{needs.bare_deno.outputs.result}}' | jq . | tee
          ${{needs.bare_deno.outputs.result_path}}
      - name: Save bare_deno_canary results
        run: >
          mkdir -p ${{needs.bare_deno_canary.outputs.result_dir}}

          echo '${{needs.bare_deno_canary.outputs.result}}' | jq . | tee
          ${{needs.bare_deno_canary.outputs.result_path}}
      - name: Save bare_dinatra results
        run: >
          mkdir -p ${{needs.bare_dinatra.outputs.result_dir}}

          echo '${{needs.bare_dinatra.outputs.result}}' | jq . | tee
          ${{needs.bare_dinatra.outputs.result_path}}
      - name: Save bare_drash results
        run: >
          mkdir -p ${{needs.bare_drash.outputs.result_dir}}

          echo '${{needs.bare_drash.outputs.result}}' | jq . | tee
          ${{needs.bare_drash.outputs.result_path}}
      - name: Save bare_express results
        run: >
          mkdir -p ${{needs.bare_express.outputs.result_dir}}

          echo '${{needs.bare_express.outputs.result}}' | jq . | tee
          ${{needs.bare_express.outputs.result_path}}
      - name: Save bare_fastify results
        run: >
          mkdir -p ${{needs.bare_fastify.outputs.result_dir}}

          echo '${{needs.bare_fastify.outputs.result}}' | jq . | tee
          ${{needs.bare_fastify.outputs.result_path}}
      - name: Save bare_http results
        run: >
          mkdir -p ${{needs.bare_http.outputs.result_dir}}

          echo '${{needs.bare_http.outputs.result}}' | jq . | tee
          ${{needs.bare_http.outputs.result_path}}
      - name: Save bare_little_native results
        run: >
          mkdir -p ${{needs.bare_little_native.outputs.result_dir}}

          echo '${{needs.bare_little_native.outputs.result}}' | jq . | tee
          ${{needs.bare_little_native.outputs.result_path}}
      - name: Save bare_little_std results
        run: >
          mkdir -p ${{needs.bare_little_std.outputs.result_dir}}

          echo '${{needs.bare_little_std.outputs.result}}' | jq . | tee
          ${{needs.bare_little_std.outputs.result_path}}
      - name: Save bare_mandarinets results
        run: >
          mkdir -p ${{needs.bare_mandarinets.outputs.result_dir}}

          echo '${{needs.bare_mandarinets.outputs.result}}' | jq . | tee
          ${{needs.bare_mandarinets.outputs.result_path}}
      - name: Save bare_node results
        run: >
          mkdir -p ${{needs.bare_node.outputs.result_dir}}

          echo '${{needs.bare_node.outputs.result}}' | jq . | tee
          ${{needs.bare_node.outputs.result_path}}
      - name: Save bare_oak results
        run: >
          mkdir -p ${{needs.bare_oak.outputs.result_dir}}

          echo '${{needs.bare_oak.outputs.result}}' | jq . | tee
          ${{needs.bare_oak.outputs.result_path}}
      - name: Save bare_opine results
        run: >
          mkdir -p ${{needs.bare_opine.outputs.result_dir}}

          echo '${{needs.bare_opine.outputs.result}}' | jq . | tee
          ${{needs.bare_opine.outputs.result_path}}
      - name: Save bare_pogo results
        run: >
          mkdir -p ${{needs.bare_pogo.outputs.result_dir}}

          echo '${{needs.bare_pogo.outputs.result}}' | jq . | tee
          ${{needs.bare_pogo.outputs.result_path}}
      - name: Save bare_reno results
        run: >
          mkdir -p ${{needs.bare_reno.outputs.result_dir}}

          echo '${{needs.bare_reno.outputs.result}}' | jq . | tee
          ${{needs.bare_reno.outputs.result_path}}
      - name: Save bare_servest results
        run: >
          mkdir -p ${{needs.bare_servest.outputs.result_dir}}

          echo '${{needs.bare_servest.outputs.result}}' | jq . | tee
          ${{needs.bare_servest.outputs.result_path}}
      - name: Save bare_tinyhttp results
        run: >
          mkdir -p ${{needs.bare_tinyhttp.outputs.result_dir}}

          echo '${{needs.bare_tinyhttp.outputs.result}}' | jq . | tee
          ${{needs.bare_tinyhttp.outputs.result_path}}
      - name: Setup deno 1.x
        uses: denoland/setup-deno@main
      - name: Generate README.md
        run: deno run -A --unstable _bench/readme.ts
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          coauthor_email: qu4k@users.noreply.github.com
          coauthor_name: qu4k
          branch: main
